<?php


class KeywordModel implements ModelInterface {
   public static function getAll() {
        $SQL = 'SELECT * FROM keyword;';
        $prep = DataBase::getInstance()->prepare($SQL);
        $res = $prep->execute();
        if ($res) {
            return $prep->fetchAll(PDO::FETCH_OBJ);
        } else {
            return [];
        }
    }

    public static function getById($id) {
        $id = intval($id);
        $SQL = 'SELECT * FROM keyword WHERE keyword_id = ?;';
        $prep = DataBase::getInstance()->prepare($SQL);
        $res = $prep->execute([$id]);
        if ($res) {
            return $prep->fetch(PDO::FETCH_OBJ);
        } else {
            return null;
        }
    }
    
    /*
     * Get a list of positions that require a given keyword - For a keyword_id get a postion_id array from position_keyword table
     * @param int keyword_id 
     * @return array
     */
    public static function getPositionsForKeywordId($keyword_id) {
        $id = intval($keyword_id);
        $SQL = 'SELECT * FROM position_keyword WHERE keyword_id = ?;';
        $prep = DataBase::getInstance()->prepare($SQL);
        $prep->execute([$id]);
        $res = $prep->fetch(PDO::FETCH_OBJ);
        $list = [];
        foreach ($res as $item) {
            $list[] = PositionModel::getById($item->position_id);
        }
        return $list;
    }
    
    /*
     * Adds a keyword to the database
     * Returns the ID of the keyword, or false if adding fails
     */
    public static function add($name, $slug) {
        $SQL = 'INSERT INTO keyword (name,slug) VALUES (?, ?)';
        $prep = DataBase::getInstance()->prepare($SQL);
        $res = $prep->execute([$name,$slug]);
        if ($res) {
            return DataBase::getInstance()->lastInsertId();
        } else {
          return false;  
        }
    }
    
    // @return boolean
    public static function edit($id, $name, $slug){
        $SQL = 'UPDATE  keyword SET name = ?, slug = ? WHERE keyword_id = ?;';
        $prep = DataBase::getInstance()->prepare($SQL);
        return $prep->execute([$name,$slug, $id]);
    }
}

